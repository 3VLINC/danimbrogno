{"version":3,"sources":["bootstrap.ts","Hooks/resume.ts","Components/DateRangeDisplay.tsx","Components/AddressDisplay.tsx","Components/Content/Components/Experience/ExperiencePanel.tsx","Components/Content/Components/Experience/WorkExperienceDisplay.tsx","Components/Content/Components/Experience/EducationExperienceDisplay.tsx","Components/Content/Components/Experience/Experience.tsx","Components/Content/Components/Experience/Experiences.tsx","Components/Content/Components/Qualifications/Qualification.tsx","Components/Content/Components/Qualifications/Qualifications.tsx","Components/Content/Components/Technologies/Technologies.tsx","Components/Content/Components/References.tsx","Components/Content/Content.tsx","Components/Icons/GitHubIcon.tsx","Components/IconButton.tsx","Components/Details/Details.tsx","Components/Page.tsx","Config/Theme/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["install","resume","bio","address","city","province","email","name","phoneNumber","position","gitHub","qualifications","experience","company","dateRange","from","to","summary","institution","program","technologies","languages","apis","buildTools","databases","deployment","cloudServices","frameworks","useResume","DateRangeDisplay","props","_props$dateRange","react","AddressDisplay","_props$address","useStyles","makeStyles","root","@media print","pageBreakAfter","topRight","textAlign","ExperiencePanel","_ref","topLeft","bottom","classes","bottomArea","core_index_es","container","justify","spacing","item","xs","alignItems","className","WorkExperienceDisplay","_props$experience","ExperiencePanel_ExperiencePanel","variant","gutterBottom","DateRangeDisplay_DateRangeDisplay","AddressDisplay_AddressDisplay","map","theSummary","key","EducationExperienceDisplay","Experience","WorkExperienceDisplay_WorkExperienceDisplay","EducationExperienceDisplay_EducationExperienceDisplay","section","&:not(:last-child)","marginBottom","unit","Experiences","theExperience","Experience_Experience","Qualification","qualification","Qualifications","Qualification_Qualification","Technologies","_useResume$technologi","join","References","maxWidth","Content","Qualifications_Qualifications","Experiences_Experiences","Technologies_Technologies","References_References","GitHubIcon","Object","assign","viewBox","d","IconButton","icon","text","theme","color","top","detail","palette","primary","link","textDecoration","Details","_useResume$bio","IconButton_IconButton","icons_index_es","href","concat","GitHubIcon_GitHubIcon","height","minHeight","insideLeft","padding","paddingRight","insideRight","paddingLeft","details","overflowY","content","Page","Details_Details","Content_Content","createMuiTheme","typography","useNextVariants","subtitle1","fontSize","h1","paddingBottom","borderBottom","h2","h3","h4","h6","body1","overrides","MuiTypography","App","react_default","a","createElement","index_es","Page_Page","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e33f8308.chunk.js","sourcesContent":["import { install } from \"@material-ui/styles\";\n\ninstall();","import { Resume } from \"../app.interface\";\n\nexport const resume: Resume = {\n    bio: {\n        address: {\n            city: 'Chelsea',\n            province: 'Quebec'\n        },\n        email: 'dan@3vl.ca',\n        name: 'Dan Imbrogno',\n        phoneNumber: '289 937-1864',\n        position: 'Startup CTO and Full Stack Developer',\n        gitHub: '3VLInc'\n        \n    },\n    qualifications: [\n        'Ability to apply creative and critical thinking to develop technical solutions to solve problems',\n        'Self motivated, early adopter of new technologies, comfortable working independently or in team settings',\n        'Excellent communication skills, experience managing people',\n        '13 years experience designing, developing and deploying web applications',\n        'Demonstrable proficiency in user interface design, development of thick client applications, design of APIs, development of scalable backend applications, design of databases, development of build tools for continuous integration and automated deployment, ability to execute targeted social media marketing campaigns'\n    ],\n    experience: [\n        {\n            address: {\n                city: 'Ottawa',\n                province: 'Ontario'\n            },\n            company: 'FreightPath',\n            dateRange: {\n                from: '2017',\n                to: 'present'\n            },\n            position: 'CTO / Partner',\n            summary: [\n                `Designed and developed the FreightPath web application, mobile application and API integrations using React, React Native and Node JS`,\n                `Developed CI deployment process with test automation, containerization and deployment to docker swarm`,\n                `Assisted in project planning, product design, business development`,\n                `Hired, trained and mentored junior developers`,\n            ]   \n        },\n        {\n            address: {\n                city: 'Wakefield',\n                province: 'Quebec'\n            },\n            company: 'Independent Study',\n            dateRange: {\n                from: '2015',\n                to: '2017' \n            },\n            position: 'Self Employed',\n            summary: ['Worked on a personal project and improved web applications development skills using NodeJS, Postgres, Angular 2, GraphQL and Docker']\n        },\n        {\n            address: {\n                city: 'Toronto',\n                province: 'Ontario'\n            },\n            company: '3VL INC.',\n            position: 'Founder',\n            summary: [\n                `Founded boutique digital experience agency providing web design, application development and social media marketing services to business`,\n                `Hired two employees`,\n                `Built custom themes, plugins, e-commerce solutions and digital contests primarily using PHP and the WordPress publishing platform`\n            ],\n            dateRange: {\n                from: '2013',\n                to: '2015'\n            }\n        },\n        {\n            address: {\n                city: 'Ottawa',\n                province: 'Ontario'\n            },\n            position: 'Co-founder',\n            company: 'Umbrella Network Inc.',\n            summary: [\n                `Co-founded WordPress agency providing theme and plugin design and development services to business`,\n                `Built platform to host movie theatre websites and recruited four theatres to purchase monthly plans`\n            ],\n            dateRange: {\n                from: '2008',\n                to: '2012'\n            }\n        },\n        {\n            address: {\n                city: 'Guanacaste',\n                province: 'Costa Rica'\n            },\n            position: 'Web developer',\n            company: 'Unidad 22',\n            summary: [\n                `8 month co-op placement working for web design agency in Costa Rica`,\n                `Developed web site for tourism and real estate industry built on WordPress and Joomla`,\n                `Learned Spanish`\n            ],\n            dateRange: {\n                from: '2008',\n                to: '2012'\n            }\n        },\n        {\n            address: {\n                city: 'Ottawa',\n                province: 'Ontario'\n            },\n            institution: 'Carleton University',\n            program: 'Bachelor of Information Technology',\n            dateRange: {\n                from: '2004',\n                to: '2009'\n            }\n        }\n    ],\n    technologies: {\n        languages: [\n            'Javascript',\n            'Typescript',\n            'NodeJS',\n            'PHP',\n            'ASP.net'\n        ],\n        apis: ['GraphQL', 'Rest'],\n        buildTools: ['Webpack', 'Grunt', 'Gulp', 'Babel'],\n        databases: ['Postgres', 'Mysql', 'Mongodb'],\n        deployment: ['Docker', 'Vagrant', 'SaltStack'],\n        cloudServices: ['AWS', 'Digital Ocean', 'Aiven', 'Travis CI', 'Circle CI'],\n        frameworks: ['React', 'React Native', 'Angular', 'NestJS', 'Material UI', 'Apollo', 'RabbitMQ']\n\n    }\n};\n\nexport const useResume = () => resume;","import * as React from 'react';\nimport { DateRange } from \"../app.interface\";\n\nexport const DateRangeDisplay: React.FC<{dateRange: DateRange}> = (props) => {\n\n    const { dateRange: { from, to } } = props;\n\n    return (\n        <React.Fragment>\n            {from} – {to}\n        </React.Fragment>\n    )\n}","import * as React from 'react';\nimport { Address } from \"../app.interface\";\n\nexport const AddressDisplay: React.FC<{address: Address}> = (props) => {\n\n    const { address: { city, province } } = props;\n\n    return (\n        <React.Fragment>\n            {city}, {province}\n        </React.Fragment>\n    )\n}","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nexport interface ExperiencePanelProps {\n    topLeft: React.ReactNode;\n    topRight: React.ReactNode;\n    bottom?: React.ReactNode;\n}\n\nconst useStyles = makeStyles(()=> ({\n    root: {\n        '@media print': {\n            pageBreakAfter: 'always'\n        }\n    },\n    topRight: {\n        textAlign: 'right'\n    }\n}))\n\nexport const ExperiencePanel: React.FC<ExperiencePanelProps> = ({ topLeft, topRight, bottom}) => {\n   \n    const classes = useStyles();\n\n    const bottomArea = (bottom) ?\n        (\n            <Grid container justify=\"space-between\" spacing={16}>\n                <Grid item xs={12}>\n                    {bottom}\n                </Grid>\n            </Grid>\n        ): null;\n\n    return (\n        <React.Fragment>\n            <Grid container justify=\"space-between\" alignItems=\"center\" spacing={16}>\n                <Grid item xs={6}>\n                    {topLeft}\n                </Grid>\n                <Grid item xs={6} className={classes.topRight}>\n                    {topRight}\n                </Grid>\n            </Grid>\n            {bottomArea}\n        </React.Fragment>\n    )\n\n}","import * as React from 'react';\nimport { WorkExperience } from '../../../../app.interface';\nimport { Typography } from '@material-ui/core';\nimport { DateRangeDisplay } from '../../../DateRangeDisplay';\nimport { AddressDisplay } from '../../../AddressDisplay';\nimport { ExperiencePanel } from './ExperiencePanel';\n\nexport const WorkExperienceDisplay: React.FC<{ experience: WorkExperience}> = (props) => {\n\n    const { experience: { company, position, address, dateRange, summary } } = props;\n\n    return (\n        <ExperiencePanel\n            topLeft={\n                <React.Fragment>\n                    <Typography variant=\"h2\" gutterBottom>\n                        {company}\n                    </Typography>\n                    <Typography variant=\"h3\" gutterBottom>\n                        {position}\n                    </Typography>\n                </React.Fragment>\n            }\n            topRight={\n                <React.Fragment>\n                    <Typography variant=\"body1\">\n                        <DateRangeDisplay dateRange={dateRange} />\n                    </Typography>\n                    <Typography variant=\"body1\">\n                        <AddressDisplay address={address} />\n                    </Typography>\n                </React.Fragment>\n            }\n            bottom={\n                <React.Fragment>\n                    {summary.map(\n                        (theSummary, key) => (\n                            <Typography key={key} variant=\"body1\" gutterBottom>\n                                {theSummary}\n                            </Typography>\n                        )\n                    )}\n                </React.Fragment>\n            }\n        />\n    );\n    \n}","import * as React from 'react';\nimport { EducationExperience } from '../../../../app.interface';\nimport { Typography } from '@material-ui/core';\nimport { AddressDisplay } from '../../../AddressDisplay';\nimport { DateRangeDisplay } from '../../../DateRangeDisplay';\nimport { ExperiencePanel } from './ExperiencePanel';\n\nexport const EducationExperienceDisplay: React.FC<{ experience: EducationExperience}> = (props) => {\n\n    const { experience: { institution, program, address, dateRange } } = props;\n\n    return (\n        <ExperiencePanel\n            topLeft={\n                <React.Fragment>\n                    <Typography variant=\"h2\" gutterBottom>\n                        {institution}\n                    </Typography>\n                    <Typography variant=\"h3\" gutterBottom>\n                        {program}\n                    </Typography>\n                </React.Fragment>\n            }\n            topRight={\n                <React.Fragment>\n                    <Typography variant=\"body1\" gutterBottom>\n                        <DateRangeDisplay dateRange={dateRange} />\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        <AddressDisplay address={address} />\n                    </Typography>\n                </React.Fragment>\n            }\n        />    \n    );\n    \n}","import * as React from 'react';\nimport { WorkExperience, EducationExperience } from '../../../../app.interface';\nimport { WorkExperienceDisplay } from './WorkExperienceDisplay';\nimport { EducationExperienceDisplay } from './EducationExperienceDisplay';\n\nexport const Experience: React.FC<{ experience: WorkExperience | EducationExperience}> = (props) => {\n\n    const { experience } = props;\n    \n    const isWorkExperience = (theExperience: WorkExperience | EducationExperience): theExperience is WorkExperience => {\n        \n        return ((theExperience as WorkExperience).company) ? true : false;\n\n    }\n\n\n    return (isWorkExperience(experience)) ?\n        <WorkExperienceDisplay experience={experience} /> : <EducationExperienceDisplay experience={experience} />;\n\n}","import * as React from 'react';\nimport { useResume } from '../../../../Hooks/resume';\nimport { Experience } from './Experience';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(({spacing}) => ({\n    section: {\n        '&:not(:last-child)': {\n            marginBottom: spacing.unit * 8\n        }\n    }\n}) )\nexport const Experiences: React.FC = () => {\n\n    const { experience } = useResume();\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h1\" gutterBottom>Experience</Typography>\n            {experience.map(\n                (theExperience, key) => \n                    (\n                        <div className={classes.section} key={key}>\n                            <Experience experience={theExperience} />\n                        </div>\n                    )\n            )}\n        </React.Fragment>\n    )\n}","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport const Qualification: React.FC<{ qualification: string}> = (props) => {\n\n    const { qualification } = props;\n    \n    return (\n        <Typography variant=\"body1\" gutterBottom>\n            {qualification}\n        </Typography>\n    )\n}","import * as React from 'react';\nimport { useResume } from '../../../../Hooks/resume';\nimport { Qualification } from './Qualification';\nimport { Typography } from '@material-ui/core';\n\nexport const Qualifications: React.FC = () => {\n\n    const { qualifications } = useResume();\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h1\" gutterBottom>Qualifications</Typography>\n            {qualifications.map(\n                (qualification, key) => <Qualification qualification={qualification} key={key} />\n            )}\n        </React.Fragment>\n    )\n}","import * as React from 'react';\nimport { useResume } from '../../../../Hooks/resume';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(({spacing}) => ({\n    section: {\n        '&:not(:last-child)': {\n            marginBottom: spacing.unit * 2\n        }\n    }\n}));\n\nexport const Technologies: React.FC = () => {\n\n    const { technologies: { languages, frameworks, apis, databases, buildTools, cloudServices } } = useResume();\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h1\" gutterBottom>Technologies</Typography>\n            <div className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Languages</Typography>\n                <Typography variant=\"body1\">{languages.join(', ')}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Frameworks</Typography>\n                <Typography variant=\"body1\">{frameworks.join(', ')}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>APIs</Typography>\n                <Typography variant=\"body1\">{apis.join(', ')}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Databases</Typography>\n                <Typography variant=\"body1\">{databases.join(', ')}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Build Tools</Typography>\n                <Typography variant=\"body1\">{buildTools.join(', ')}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Cloud Services</Typography>\n                <Typography variant=\"body1\">{cloudServices.join(', ')}</Typography>\n            </div>\n        </React.Fragment>\n    )\n}","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(({ spacing }) => ({\n    root: {\n        textAlign: 'center'\n    }\n}));\n\nexport const References: React.FC = () => {\n\n    const classes = useStyles();\n\n    return (<Typography className={classes.root} variant=\"body1\">References Available Upon Request</Typography>);\n\n}","import * as React from 'react';\nimport { Experiences } from './Components/Experience/Experiences';\nimport { Qualifications } from './Components/Qualifications/Qualifications';\nimport { Technologies } from './Components/Technologies/Technologies';\nimport { makeStyles } from '@material-ui/styles';\nimport { References } from './Components/References';\n\nconst useStyles = makeStyles(({ spacing }) => ({\n    root: {\n        maxWidth: 800\n    },\n    section: {\n        '&:not(:last-child)': {\n            marginBottom: spacing.unit * 8\n        }\n    }\n}));\n\nexport const Content: React.FC = () => {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.section}>\n                <Qualifications />\n            </div>\n            <div className={classes.section}>\n                <Experiences />\n            </div>\n            <div className={classes.section}>\n                <Technologies />\n            </div>\n            <div className={classes.section}>\n                <References />\n            </div>\n        </div>\n    )\n}","\nimport * as React from 'react';\nimport { SvgIcon } from \"@material-ui/core\";\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nexport type IconProps = SvgIconProps & { className: string };\n\nexport const GitHubIcon: React.FC<IconProps> = (props: IconProps) => (\n    <SvgIcon {...props} viewBox=\"0 0 32.58 31.77\">\n        <path d=\"M16.29,0a16.29,16.29,0,0,0-5.15,31.75c.82.15,1.11-.36,1.11-.79s0-1.41,0-2.77C7.7,29.18,6.74,26,6.74,26a4.36,4.36,0,0,0-1.81-2.39c-1.47-1,.12-1,.12-1a3.43,3.43,0,0,1,2.49,1.68,3.48,3.48,0,0,0,4.74,1.36,3.46,3.46,0,0,1,1-2.18c-3.62-.41-7.42-1.81-7.42-8a6.3,6.3,0,0,1,1.67-4.37,5.94,5.94,0,0,1,.16-4.31s1.37-.44,4.48,1.67a15.41,15.41,0,0,1,8.16,0c3.11-2.11,4.47-1.67,4.47-1.67A5.91,5.91,0,0,1,25,11.07a6.3,6.3,0,0,1,1.67,4.37c0,6.26-3.81,7.63-7.44,8a3.85,3.85,0,0,1,1.11,3c0,2.18,0,3.94,0,4.47s.29.94,1.12.78A16.29,16.29,0,0,0,16.29,0Z\" />\n    </SvgIcon>\n);","import * as React from 'react';\nimport { Grid} from \"@material-ui/core\";\n\nexport interface IconButtonProps {\n    icon: React.ReactNode;\n    text: React.ReactNode;\n}\nexport const IconButton: React.FC<IconButtonProps> = ({ icon, text }) => {\n\n    return (\n        <Grid container spacing={16} alignItems=\"center\">\n            <Grid item>\n                {icon}\n            </Grid>\n            <Grid item>\n                {text}\n            </Grid>\n        </Grid>\n    )\n}","import { useResume } from \"../../Hooks/resume\";\nimport * as React from 'react';\nimport { Typography, Theme } from \"@material-ui/core\";\nimport { AddressDisplay } from \"../AddressDisplay\";\nimport { GitHubIcon } from \"../Icons/GitHubIcon\";\nimport { Email, Phone, LocationCity } from '@material-ui/icons';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { IconButton } from \"../IconButton\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    icon: {\n        color: 'inherit',\n        position: 'relative',\n        top: -6\n    },\n    detail: {\n        color: theme.palette.text.primary\n    },\n    link: {\n        color: 'inherit',\n        textDecoration: 'none'\n    }\n}));\n\nexport const Details: React.FC = () => {\n    \n    const { bio: { name, position, address, email, gitHub, phoneNumber } } = useResume();\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>{name}</Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>{position}</Typography>\n            <IconButton \n                icon={<LocationCity className={classes.icon} />} \n                text={\n                (<Typography className={classes.detail} variant=\"body1\" gutterBottom={true}>\n                    <AddressDisplay address={address} />\n                </Typography>)\n                } \n            />\n            <a className={classes.link} href={`mailto:${email}`}>\n                <IconButton \n                icon={<Email className={classes.icon} />} \n                text={\n                    <Typography className={classes.detail} variant=\"body1\" gutterBottom={true}>{email}</Typography>\n                } \n                />\n            </a>\n            <a className={classes.link} href={`https://github.com/${gitHub}`}>\n                <IconButton \n                    icon={<GitHubIcon className={classes.icon} />} \n                    text={<Typography className={classes.detail} variant=\"body1\" gutterBottom={true}>{gitHub}</Typography>} \n                />\n            </a>\n            <a className={classes.link} href={`tel://${phoneNumber}`}>\n                <IconButton \n                    icon={<Phone className={classes.icon} />} \n                    text={<Typography className={classes.detail} variant=\"body1\" gutterBottom={true}>{phoneNumber}</Typography>} />\n            </a>\n        </React.Fragment>\n    )\n}","import * as React from 'react';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from '@material-ui/core';\nimport { Content } from './Content/Content';\nimport { Details } from './Details/Details';\n\nconst useStyles = makeStyles(({ spacing }) => ({\n    root: {\n        height: '100%',\n        minHeight: 0,\n        '@media print': {\n            height: 'auto'\n        }\n    },\n    insideLeft: {\n        height: '100%',\n        padding: spacing.unit * 4,\n        paddingRight: spacing.unit * 2\n    },\n    insideRight: {\n        height: '100%',\n        padding: spacing.unit * 4,\n        paddingLeft: spacing.unit * 2\n    },\n    details: {\n        height: '100%',\n        minHeight: 0,\n        overflowY: 'auto',\n        '@media print': {\n            height: 'auto'\n        }\n    },\n    content: {\n        height: '100%',\n        minHeight: 0,\n        overflowY: 'auto',\n        '@media print': {\n            height: 'auto'\n        }\n    }\n}));\n\nexport const Page: React.FC = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        \n        <Grid className={classes.root} container spacing={16} alignItems=\"stretch\">\n            <Grid className={classes.details} item xs={4}>\n                <div className={classes.insideLeft}>\n                    <Details />\n                </div>\n            </Grid>\n            <Grid className={classes.content} item xs={8}>\n                <div className={classes.insideRight}>\n                    <Content />\n                </div>\n            </Grid>\n        </Grid>\n    );\n\n}","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n      useNextVariants: true,\n      // title: {\n      //   fontSize: 18,\n      //   color: 'red'\n      // },\n      subtitle1: {\n        fontSize: 16\n      },\n      h1: {\n          fontSize: 22,\n          paddingBottom: 8,\n          borderBottom: '1px solid black'\n      },\n      h2: {\n          fontSize: 20\n      },\n      h3 : {\n        fontSize: 18\n      },\n      h4: {\n        fontSize: 14\n      },\n      h6: {\n        fontSize: 22\n      },\n      body1: {\n        \n      },\n  },\n  overrides: {\n    MuiTypography: {\n    //   title: {\n    //     fontSize: 18,\n    //     color: 'red'\n    //   },\n    //   subtitle1: {\n    //     fontSize: 16,\n    //     color: 'red'\n    //   },\n    //   h1: {\n    //       fontSize: 14,\n    //       color: 'red'\n    //   },\n    //   h2: {\n    //       fontSize: 14,\n    //       color: 'red'\n    //   }\n      gutterBottom: {\n        marginBottom: 15\n      }\n    }\n  }\n});","import React from 'react';\nimport './App.css';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Page } from './Components/Page';\nimport { theme } from './Config/Theme/theme';\n\nconst App: React.FC = () => {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Page />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './bootstrap';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}